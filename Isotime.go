//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
package libcore
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
import (
	"strconv"
	"fmt"
	"time"
)
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
type Time struct {
	Year       int
	Month      int
	Day        int
	Hour       int
	Minute     int
	Second     int
	Nanosecond int
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func GetUnixnanotimeUtcInt64() (unixnanotimeUtc int64) {
	unixnanotimeUtc = time.Now().UTC().UnixNano()
	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func GetUnixnanotimeUtc() (unixnanotimeUtc string) {
	unixnanotimeUtc = fmt.Sprintf("%d", GetUnixnanotimeUtcInt64())
	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func GetUnixmicrotimeUtcInt64() (unixmicrotimeUtc int64) {
	unixmicrotimeUtc = time.Now().UTC().UnixNano() / int64(time.Microsecond)
	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func GetUnixmicrotimeUtc() (unixmicrotimeUtc string) {
	unixmicrotimeUtc = fmt.Sprintf("%d", GetUnixmicrotimeUtcInt64())
	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func UnixnanotimeParse(unixnanotime int64) (target Time) {
	t := time.Unix(0, unixnanotime)
	t = t.UTC()

	target.Year       = t.Year()
	target.Month      = int(t.Month())
	target.Day        = t.Day()
	target.Hour       = t.Hour()
	target.Minute     = t.Minute()
	target.Second     = t.Second()
	target.Nanosecond = t.Nanosecond()

	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func UnixnanotimeMake(pTime *Time) (unixnanotime int64) {

	t := time.Date(pTime.Year, time.Month(pTime.Month), pTime.Day, pTime.Hour, pTime.Minute, pTime.Second, pTime.Nanosecond, time.UTC)
	unixnanotime = t.UnixNano()

	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// 1624120658256315911 -> "2021-06-19 16:37:38.256315911"
func Unixnanotime2iso(unixnanotime int64) (iso string) {
	var t1 Time

	t1 = UnixnanotimeParse(unixnanotime)

	iso = fmt.Sprintf("%04d-%02d-%02d %02d:%02d:%02d.%09d", t1.Year, t1.Month, t1.Day, t1.Hour, t1.Minute, t1.Second, t1.Nanosecond)

	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// "1624120658256315911" -> "2021-06-19 16:37:38.256315911"
func Unixnanotime_str2iso(unixnanotime_str string) (iso string) {

	var unixnanotime int64 = 0

	tmp, err := strconv.ParseUint(unixnanotime_str, 10, 64)
	if err == nil {
		unixnanotime = int64(tmp)
	}

	return Unixnanotime2iso(unixnanotime)
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// 1624120658256315 -> "2021-06-19 16:37:38.256315000"
func Unixmicrotime2iso(unixmicrotime int64) (iso string) {
	return Unixnanotime2iso(unixmicrotime * 1000)
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// "1624120658256315" -> "2021-06-19 16:37:38.256315000"
func Unixmicrotime_str2iso(unixmicrotime_str string) (iso string) {

	var unixmicrotime int64 = 0

	tmp, err := strconv.ParseUint(unixmicrotime_str, 10, 64)
	if err == nil {
		unixmicrotime = int64(tmp)
	}

	return Unixnanotime2iso(unixmicrotime * 1000)
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// 1624120658 -> "2021-06-19 16:37:38.000000000"
func Unixtime2iso(unixtime int64) (iso string) {
	return Unixnanotime2iso(unixtime * 1000000000)
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// "1624120658" -> "2021-06-19 16:37:38.000000000"
func Unixtime_str2iso(unixtime_str string) (iso string) {

	var unixtime int64 = 0

	tmp, err := strconv.ParseUint(unixtime_str, 10, 64)
	if err == nil {
		unixtime = int64(tmp)
	}

	return Unixnanotime2iso(unixtime * 1000000000)
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func TimeCropPerDay(source time.Time) (target time.Time) {

	var year int
	year = source.Year()

	var month int
	month = int(source.Month())

	var day int
	day = source.Day()

	target = time.Date(year, time.Month(month), day, 0, 0, 0, 0, source.Location()) // time.UTC

	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func UnixnanotimeCropPerDay(unixnanotimeSource int64) (unixnanotimeTarget int64) {

	var t1 Time
	t1 = UnixnanotimeParse(unixnanotimeSource)

	t1.Hour       = 0
	t1.Minute     = 0
	t1.Second     = 0
	t1.Nanosecond = 0

	unixnanotimeTarget = UnixnanotimeMake(&t1)

	return
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func isotime_test() bool {
	var t1 Time

	t1 = UnixnanotimeParse(1624120658256315911)
	if (t1.Year != 2021) || (t1.Month != 06) || (t1.Day != 19) || (t1.Hour != 16) || (t1.Minute != 37) || (t1.Second != 38) || (t1.Nanosecond != 256315911) {
		fmt.Printf("step001\n")
	}

	if UnixnanotimeMake(&t1) != 1624120658256315911 {
		fmt.Printf("step002\n")
		return false
	}

	if UnixnanotimeCropPerDay(1624120658256315911) != 1624060800000000000 {
		fmt.Printf("step003\n")
		return false
	}

	if Unixnanotime2iso(UnixnanotimeCropPerDay(1624120658256315911)) != "2021-06-19 00:00:00.000000000" {
		fmt.Printf("step004\n")
		return false
	}

	if Unixnanotime2iso(1624120658256315911) != "2021-06-19 16:37:38.256315911" {
		fmt.Printf("step005\n")
		return false
	}

	if Unixnanotime_str2iso("1624120658256315911") != "2021-06-19 16:37:38.256315911" {
		fmt.Printf("step006\n")
		return false
	}

	if Unixmicrotime2iso(1624120658256315) != "2021-06-19 16:37:38.256315000" {
		fmt.Printf("step007\n")
		return false
	}

	if Unixmicrotime_str2iso("1624120658256315") != "2021-06-19 16:37:38.256315000" {
		fmt.Printf("step008\n")
		return false
	}

	if Unixtime2iso(1624120658) != "2021-06-19 16:37:38.000000000" {
		fmt.Printf("step009\n")
		return false
	}

	if Unixtime_str2iso("1624120658") != "2021-06-19 16:37:38.000000000" {
		fmt.Printf("step010\n")
		return false
	}

	fmt.Printf("ok\n")
	return true
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
/*
func main() {
	isotime_test()


}
*/
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
