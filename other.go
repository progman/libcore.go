//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
package libcore
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// [9 8 7 6 5 4 3 2 1], 0, 20 -> [9 8 7 6 5 4 3 2 1]
// [9 8 7 6 5 4 3 2 1], 0, 9  -> [9 8 7 6 5 4 3 2 1]
// [9 8 7 6 5 4 3 2 1], 0, 8  -> [9 8 7 6 5 4 3 2]
// [9 8 7 6 5 4 3 2 1], 1, 8  ->   [8 7 6 5 4 3 2 1]
// [9 8 7 6 5 4 3 2 1], 2, 8  ->     [7 6 5 4 3 2 1]
// [9 8 7 6 5 4 3 2 1], 2, 9  ->     [7 6 5 4 3 2 1]
// [9 8 7 6 5 4 3 2 1], 2, -1 ->     [7 6 5 4 3 2 1]
func SubByte(buf []byte, start_index int, size int) []byte {

	tmp := []byte{}


	if start_index < 0 {
		return tmp
	}


	if start_index >= len(buf) {
		return tmp
	}


	if (size == -1) {
		size = len(buf) - start_index
	}


	if (start_index + size) >= len(buf) {
		size = len(buf) - start_index
	}


	stop_index := start_index + size


	for i := start_index; i < stop_index; i++ {
		tmp = append(tmp, buf[i])
	}


	return tmp
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
func SubStr(buf string, start_index int, size int) string {
	return string(SubByte([]byte(buf), start_index, size))
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
